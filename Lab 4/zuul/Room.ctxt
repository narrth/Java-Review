#BlueJ class context
comment0.params=description
comment0.target=Room(java.lang.String)
comment0.text=\r\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\r\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\r\n\ "an\ open\ court\ yard".\r\n\ \r\n\ @param\ description\ The\ room's\ description.\r\n
comment1.params=item
comment1.target=void\ addItem(Item)
comment1.text=\r\n\ Add\ an\ item\ to\ the\ room,\ best\ to\ check\ that\ it's\ not\ null.\r\n\ \r\n\ @param\ item\ The\ item\ to\ add\ to\ the\ room\r\n
comment10.params=i
comment10.target=Room\ getRoom(int)
comment10.text=\r\n\ Return\ a\ room\ from\ the\ roomList.\r\n\ \r\n\ @param\ room\ The\ room\ from\ the\ roomList\r\n
comment2.params=direction\ neighbour
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Define\ an\ exit\ from\ this\ room.\r\n\ \r\n\ @param\ direction\ The\ direction\ of\ the\ exit\r\n\ @param\ neighbour\ The\ room\ to\ which\ the\ exit\ leads\r\n
comment3.params=
comment3.target=java.lang.String\ getShortDescription()
comment3.text=\r\n\ Returns\ a\ short\ description\ of\ the\ room,\ i.e.\ the\ one\ that\r\n\ was\ defined\ in\ the\ constructor\r\n\ \r\n\ @return\ The\ short\ description\ of\ the\ room\r\n
comment4.params=
comment4.target=java.lang.String\ getLongDescription()
comment4.text=\r\n\ Return\ a\ long\ description\ of\ the\ room\ in\ the\ form\:\r\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\r\n\ \ \ \ \ Exits\:\ north\ west\r\n\ \ \ \ \ Items\:\ \r\n\ \ \ \ \ \ \ \ a\ chair\ weighing\ 5\ kgs.\r\n\ \ \ \ \ \ \ \ a\ table\ weighing\ 10\ kgs.\r\n\ \ \ \ \ \r\n\ @return\ A\ long\ description\ of\ this\ room\r\n
comment5.params=
comment5.target=java.lang.String\ getExitString()
comment5.text=\r\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\r\n\ "Exits\:\ north\ west".\r\n\ \r\n\ @return\ Details\ of\ the\ room's\ exits\r\n
comment6.params=direction
comment6.target=Room\ getExit(java.lang.String)
comment6.text=\r\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\r\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\r\n\ \r\n\ @param\ direction\ The\ exit's\ direction\r\n\ @return\ The\ room\ in\ the\ given\ direction\r\n
comment7.params=
comment7.target=java.lang.String\ getItems()
comment7.text=\r\n\ Return\ a\ String\ representing\ the\ items\ in\ the\ room,\ one\ per\ line.\r\n\ \r\n\ @return\ A\ String\ of\ the\ items,\ one\ per\ line\r\n
comment8.params=name
comment8.target=Item\ getItem(java.lang.String)
comment8.text=\r\n\ Return\ the\ desired\ item\ in\ the\ room,\ or\ null\ if\ not\ found.\r\n\ \r\n\ @return\ Desired\ item,\ or\ null\ if\ not\ found\r\n
comment9.params=room
comment9.target=void\ addRoom(Room)
comment9.text=\r\n\ Add\ a\ room\ to\ the\ roomList.\r\n\ \r\n\ @param\ room\ The\ room\ to\ add\ to\ the\ roomList\r\n
numComments=11
